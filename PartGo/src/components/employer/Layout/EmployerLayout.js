import React, { useState } from 'react';
import { useAuth } from '../../../contexts/AuthContext';
import { useNotification } from '../../../contexts/NotificationContext';
import Header from '../../Header';
import PartGOFooter from '../../PartGOFooter ';
import './EmployerLayout.css';

const EmployerLayout = ({ children, currentPage = 'dashboard' }) => {
    const { user, logout } = useAuth();
    const { success } = useNotification();
    const [sidebarCollapsed, setSidebarCollapsed] = useState(false);

    const menuItems = [
        {
            id: 'dashboard',
            label: 'Dashboard',
            icon: 'üìä',
            path: '/company-dashboard',
            description: 'T·ªïng quan v√† th·ªëng k√™'
        },
        {
            id: 'jobs',
            label: 'Qu·∫£n l√Ω tin tuy·ªÉn d·ª•ng',
            icon: 'üíº',
            path: '/company-dashboard/jobs',
            description: 'T·∫°o v√† qu·∫£n l√Ω tin ƒëƒÉng'
        },
        {
            id: 'applications',
            label: 'Qu·∫£n l√Ω ·ª©ng vi√™n',
            icon: 'üë•',
            path: '/company-dashboard/applications',
            description: 'Xem v√† x·ª≠ l√Ω h·ªì s∆°'
        },
        {
            id: 'analytics',
            label: 'B√°o c√°o & Ph√¢n t√≠ch',
            icon: 'üìà',
            path: '/company-dashboard/analytics',
            description: 'Hi·ªáu qu·∫£ tuy·ªÉn d·ª•ng'
        },
        {
            id: 'company',
            label: 'Th√¥ng tin c√¥ng ty',
            icon: 'üè¢',
            path: '/company-dashboard/company',
            description: 'H·ªì s∆° v√† c√†i ƒë·∫∑t'
        },
        {
            id: 'templates',
            label: 'M·∫´u tin tuy·ªÉn d·ª•ng',
            icon: 'üìù',
            path: '/company-dashboard/templates',
            description: 'T·∫°o v√† qu·∫£n l√Ω m·∫´u'
        }
    ];

    const handleMenuClick = (path) => {
        window.location.href = path;
    };

    const toggleSidebar = () => {
        setSidebarCollapsed(!sidebarCollapsed);
    };

    return (
        <div className="employer-layout">
            <Header />
            
            <div className="employer-main">
                {/* Sidebar */}
                <aside className={`employer-sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>
                    <div className="sidebar-header">
                        <div className="company-info">
                            {!sidebarCollapsed && (
                                <>
                                    <div className="company-avatar">
                                        {user?.companyName?.charAt(0) || 'C'}
                                    </div>
                                    <div className="company-details">
                                        <h3>{user?.companyName || 'C√¥ng ty'}</h3>
                                        <p>{user?.fullName}</p>
                                    </div>
                                </>
                            )}
                        </div>
                        <button 
                            className="sidebar-toggle"
                            onClick={toggleSidebar}
                            title={sidebarCollapsed ? 'M·ªü r·ªông' : 'Thu g·ªçn'}
                        >
                            {sidebarCollapsed ? '‚Üí' : '‚Üê'}
                        </button>
                    </div>

                    <nav className="sidebar-nav">
                        {menuItems.map(item => (
                            <button
                                key={item.id}
                                className={`nav-item ${currentPage === item.id ? 'active' : ''}`}
                                onClick={() => handleMenuClick(item.path)}
                                title={sidebarCollapsed ? item.label : ''}
                            >
                                <span className="nav-icon">{item.icon}</span>
                                {!sidebarCollapsed && (
                                    <div className="nav-content">
                                        <span className="nav-label">{item.label}</span>
                                        <span className="nav-description">{item.description}</span>
                                    </div>
                                )}
                            </button>
                        ))}
                    </nav>

                    <div className="sidebar-footer">
                        {!sidebarCollapsed && (
                            <div className="quick-actions">
                                <button 
                                    className="quick-action-btn primary"
                                    onClick={() => handleMenuClick('/company-dashboard/jobs/create')}
                                >
                                    <span>‚ûï</span>
                                    ƒêƒÉng tin m·ªõi
                                </button>
                                <button 
                                    className="quick-action-btn secondary"
                                    onClick={() => handleMenuClick('/company-dashboard/applications')}
                                >
                                    <span>üëÅÔ∏è</span>
                                    Xem ·ª©ng vi√™n
                                </button>
                            </div>
                        )}
                    </div>
                </aside>

                {/* Main Content */}
                <main className={`employer-content ${sidebarCollapsed ? 'expanded' : ''}`}>
                    <div className="content-wrapper">
                        {children}
                    </div>
                </main>
            </div>

            
        </div>
    );
};

export default EmployerLayout;
