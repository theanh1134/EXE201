{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for API\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:54112/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API functions\nexport const forgotPassword = async email => {\n  try {\n    const response = await api.post('/auth/forgot-password', {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n  }\n};\nexport const resetPassword = async (userId, code, newPassword) => {\n  try {\n    const response = await api.post('/auth/reset-password', {\n      userId,\n      code,\n      newPassword\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n  }\n};\nexport const login = async (email, password) => {\n  try {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message;\n  }\n};\nexport const register = async userData => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message;\n  }\n};\nexport const registerCompany = async companyData => {\n  try {\n    const response = await api.post('/auth/register-company', companyData);\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message;\n  }\n};\nexport const verifyEmail = async (userId, code) => {\n  try {\n    const response = await api.post('/auth/verify-email', {\n      userId,\n      code\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response7;\n    throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message;\n  }\n};\nexport const resendVerification = async userId => {\n  try {\n    const response = await api.post('/auth/resend-verification', {\n      userId\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response8;\n    throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nexport const getCurrentUser = () => {\n  const token = localStorage.getItem('token');\n  console.log('getCurrentUser - token:', token);\n  if (!token) return null;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    console.log('getCurrentUser - payload:', payload);\n    // Token payload has userId, email, role directly (not nested in user object)\n    return {\n      id: payload.userId,\n      email: payload.email,\n      role: payload.role\n    };\n  } catch (error) {\n    console.error('getCurrentUser - error:', error);\n    return null;\n  }\n};\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return false;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return payload.exp > Date.now() / 1000;\n  } catch (error) {\n    return false;\n  }\n};\nexport const saveProfile = async (userId, profileData) => {\n  try {\n    const response = await api.put('/auth/profile', {\n      userId,\n      profileData\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response9;\n    throw ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message;\n  }\n};\nexport const getProfile = async userId => {\n  try {\n    const response = await api.get(`/auth/profile/${userId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response10;\n    throw ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","forgotPassword","email","post","data","_error$response2","message","resetPassword","userId","code","newPassword","_error$response3","login","password","_error$response4","register","userData","_error$response5","registerCompany","companyData","_error$response6","verifyEmail","_error$response7","resendVerification","_error$response8","logout","getCurrentUser","console","log","payload","JSON","parse","atob","split","id","role","isAuthenticated","exp","Date","now","saveProfile","profileData","put","_error$response9","getProfile","get","_error$response10"],"sources":["E:/HocTap/Ky8/EXE201/EXE201/PartGo/src/services/authAPI.js"],"sourcesContent":["import axios from 'axios';\n\n// Base URL for API\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:54112/api';\n\n// Create axios instance\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Add token to requests if available\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Handle token expiration\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response?.status === 401) {\n            localStorage.removeItem('token');\n            window.location.href = '/';\n        }\n        return Promise.reject(error);\n    }\n);\n\n// Auth API functions\nexport const forgotPassword = async (email) => {\n    try {\n        const response = await api.post('/auth/forgot-password', { email });\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || error.message;\n    }\n};\n\nexport const resetPassword = async (userId, code, newPassword) => {\n    try {\n        const response = await api.post('/auth/reset-password', {\n            userId,\n            code,\n            newPassword\n        });\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || error.message;\n    }\n};\n\nexport const login = async (email, password) => {\n    try {\n        const response = await api.post('/auth/login', { email, password });\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || error.message;\n    }\n};\n\nexport const register = async (userData) => {\n    try {\n        const response = await api.post('/auth/register', userData);\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || error.message;\n    }\n};\n\nexport const registerCompany = async (companyData) => {\n    try {\n        const response = await api.post('/auth/register-company', companyData);\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || error.message;\n    }\n};\n\nexport const verifyEmail = async (userId, code) => {\n    try {\n        const response = await api.post('/auth/verify-email', { userId, code });\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || error.message;\n    }\n};\n\nexport const resendVerification = async (userId) => {\n    try {\n        const response = await api.post('/auth/resend-verification', { userId });\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || error.message;\n    }\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n};\n\nexport const getCurrentUser = () => {\n    const token = localStorage.getItem('token');\n    console.log('getCurrentUser - token:', token);\n    if (!token) return null;\n\n    try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        console.log('getCurrentUser - payload:', payload);\n        // Token payload has userId, email, role directly (not nested in user object)\n        return {\n            id: payload.userId,\n            email: payload.email,\n            role: payload.role\n        };\n    } catch (error) {\n        console.error('getCurrentUser - error:', error);\n        return null;\n    }\n};\n\nexport const isAuthenticated = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return false;\n\n    try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        return payload.exp > Date.now() / 1000;\n    } catch (error) {\n        return false;\n    }\n};\n\nexport const saveProfile = async (userId, profileData) => {\n    try {\n        const response = await api.put('/auth/profile', { userId, profileData });\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || error.message;\n    }\n};\n\nexport const getProfile = async (userId) => {\n    try {\n        const response = await api.get(`/auth/profile/${userId}`);\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || error.message;\n    }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}