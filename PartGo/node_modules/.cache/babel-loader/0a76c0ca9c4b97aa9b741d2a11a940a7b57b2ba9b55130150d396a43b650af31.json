{"ast":null,"code":"import api from './authAPI';\n\n// Application Management API for Employers\nexport const applicationAPI = {\n  // Get applications for a specific job\n  getJobApplications: async (jobId, params = {}) => {\n    const queryParams = new URLSearchParams(params).toString();\n    const response = await api.get(`/applications/job/${jobId}?${queryParams}`);\n    // Backend returns { applications, totalPages, currentPage, total }\n    // Return just the applications array for compatibility\n    return response.data.applications || [];\n  },\n  // Get application statistics for a job\n  getJobApplicationStats: async jobId => {\n    const response = await api.get(`/applications/job/${jobId}/stats`);\n    return response.data;\n  },\n  // Update application status\n  updateApplicationStatus: async (applicationId, status) => {\n    const response = await api.put(`/applications/${applicationId}/status`, {\n      status\n    });\n    return response.data;\n  },\n  // Add note to application\n  addNoteToApplication: async (applicationId, text) => {\n    const response = await api.post(`/applications/${applicationId}/notes`, {\n      text\n    });\n    return response.data;\n  }\n};\n\n// Application status options\nexport const applicationStatuses = [{\n  value: 'pending',\n  label: 'Chờ xem xét',\n  color: '#f59e0b',\n  description: 'Đơn ứng tuyển mới'\n}, {\n  value: 'reviewed',\n  label: 'Đã xem xét',\n  color: '#3b82f6',\n  description: 'Đã xem qua hồ sơ'\n}, {\n  value: 'shortlisted',\n  label: 'Sơ tuyển',\n  color: '#8b5cf6',\n  description: 'Đã qua vòng sơ tuyển'\n}, {\n  value: 'interviewed',\n  label: 'Đã phỏng vấn',\n  color: '#06b6d4',\n  description: 'Đã hoàn thành phỏng vấn'\n}, {\n  value: 'accepted',\n  label: 'Chấp nhận',\n  color: '#10b981',\n  description: 'Đã chấp nhận ứng viên'\n}, {\n  value: 'rejected',\n  label: 'Từ chối',\n  color: '#ef4444',\n  description: 'Không phù hợp'\n}];\nexport default applicationAPI;","map":{"version":3,"names":["api","applicationAPI","getJobApplications","jobId","params","queryParams","URLSearchParams","toString","response","get","data","applications","getJobApplicationStats","updateApplicationStatus","applicationId","status","put","addNoteToApplication","text","post","applicationStatuses","value","label","color","description"],"sources":["E:/HocTap/Ky8/EXE201/EXE201/PartGo/src/services/applicationAPI.js"],"sourcesContent":["import api from './authAPI';\r\n\r\n// Application Management API for Employers\r\nexport const applicationAPI = {\r\n    // Get applications for a specific job\r\n    getJobApplications: async (jobId, params = {}) => {\r\n        const queryParams = new URLSearchParams(params).toString();\r\n        const response = await api.get(`/applications/job/${jobId}?${queryParams}`);\r\n        // Backend returns { applications, totalPages, currentPage, total }\r\n        // Return just the applications array for compatibility\r\n        return response.data.applications || [];\r\n    },\r\n\r\n    // Get application statistics for a job\r\n    getJobApplicationStats: async (jobId) => {\r\n        const response = await api.get(`/applications/job/${jobId}/stats`);\r\n        return response.data;\r\n    },\r\n\r\n    // Update application status\r\n    updateApplicationStatus: async (applicationId, status) => {\r\n        const response = await api.put(`/applications/${applicationId}/status`, {\r\n            status\r\n        });\r\n        return response.data;\r\n    },\r\n\r\n    // Add note to application\r\n    addNoteToApplication: async (applicationId, text) => {\r\n        const response = await api.post(`/applications/${applicationId}/notes`, {\r\n            text\r\n        });\r\n        return response.data;\r\n    }\r\n};\r\n\r\n// Application status options\r\nexport const applicationStatuses = [\r\n    {\r\n        value: 'pending',\r\n        label: 'Chờ xem xét',\r\n        color: '#f59e0b',\r\n        description: 'Đơn ứng tuyển mới'\r\n    },\r\n    {\r\n        value: 'reviewed',\r\n        label: 'Đã xem xét',\r\n        color: '#3b82f6',\r\n        description: 'Đã xem qua hồ sơ'\r\n    },\r\n    {\r\n        value: 'shortlisted',\r\n        label: 'Sơ tuyển',\r\n        color: '#8b5cf6',\r\n        description: 'Đã qua vòng sơ tuyển'\r\n    },\r\n    {\r\n        value: 'interviewed',\r\n        label: 'Đã phỏng vấn',\r\n        color: '#06b6d4',\r\n        description: 'Đã hoàn thành phỏng vấn'\r\n    },\r\n    {\r\n        value: 'accepted',\r\n        label: 'Chấp nhận',\r\n        color: '#10b981',\r\n        description: 'Đã chấp nhận ứng viên'\r\n    },\r\n    {\r\n        value: 'rejected',\r\n        label: 'Từ chối',\r\n        color: '#ef4444',\r\n        description: 'Không phù hợp'\r\n    }\r\n];\r\n\r\nexport default applicationAPI;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,WAAW;;AAE3B;AACA,OAAO,MAAMC,cAAc,GAAG;EAC1B;EACAC,kBAAkB,EAAE,MAAAA,CAAOC,KAAK,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK;IAC9C,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC;IAC1D,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,qBAAqBN,KAAK,IAAIE,WAAW,EAAE,CAAC;IAC3E;IACA;IACA,OAAOG,QAAQ,CAACE,IAAI,CAACC,YAAY,IAAI,EAAE;EAC3C,CAAC;EAED;EACAC,sBAAsB,EAAE,MAAOT,KAAK,IAAK;IACrC,MAAMK,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,qBAAqBN,KAAK,QAAQ,CAAC;IAClE,OAAOK,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACAG,uBAAuB,EAAE,MAAAA,CAAOC,aAAa,EAAEC,MAAM,KAAK;IACtD,MAAMP,QAAQ,GAAG,MAAMR,GAAG,CAACgB,GAAG,CAAC,iBAAiBF,aAAa,SAAS,EAAE;MACpEC;IACJ,CAAC,CAAC;IACF,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACAO,oBAAoB,EAAE,MAAAA,CAAOH,aAAa,EAAEI,IAAI,KAAK;IACjD,MAAMV,QAAQ,GAAG,MAAMR,GAAG,CAACmB,IAAI,CAAC,iBAAiBL,aAAa,QAAQ,EAAE;MACpEI;IACJ,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACE,IAAI;EACxB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMU,mBAAmB,GAAG,CAC/B;EACIC,KAAK,EAAE,SAAS;EAChBC,KAAK,EAAE,aAAa;EACpBC,KAAK,EAAE,SAAS;EAChBC,WAAW,EAAE;AACjB,CAAC,EACD;EACIH,KAAK,EAAE,UAAU;EACjBC,KAAK,EAAE,YAAY;EACnBC,KAAK,EAAE,SAAS;EAChBC,WAAW,EAAE;AACjB,CAAC,EACD;EACIH,KAAK,EAAE,aAAa;EACpBC,KAAK,EAAE,UAAU;EACjBC,KAAK,EAAE,SAAS;EAChBC,WAAW,EAAE;AACjB,CAAC,EACD;EACIH,KAAK,EAAE,aAAa;EACpBC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,SAAS;EAChBC,WAAW,EAAE;AACjB,CAAC,EACD;EACIH,KAAK,EAAE,UAAU;EACjBC,KAAK,EAAE,WAAW;EAClBC,KAAK,EAAE,SAAS;EAChBC,WAAW,EAAE;AACjB,CAAC,EACD;EACIH,KAAK,EAAE,UAAU;EACjBC,KAAK,EAAE,SAAS;EAChBC,KAAK,EAAE,SAAS;EAChBC,WAAW,EAAE;AACjB,CAAC,CACJ;AAED,eAAevB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}