{"ast":null,"code":"var _jsxFileName = \"E:\\\\HocTap\\\\Ky8\\\\EXE201\\\\EXE201\\\\PartGo\\\\src\\\\components\\\\employer\\\\Analytics\\\\AnalyticsDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useEmployerData } from '../../../hooks/employer/useEmployerData';\nimport { applicationAPI } from '../../../services/applicationAPI';\nimport EmployerLayout from '../Layout/EmployerLayout';\nimport OverviewMetrics from './OverviewMetrics';\nimport JobPerformanceChart from './JobPerformanceChart';\nimport HiringFunnelChart from './HiringFunnelChart';\nimport ApplicationTrendsChart from './ApplicationTrendsChart';\nimport TopJobsTable from './TopJobsTable';\nimport RecruitmentInsights from './RecruitmentInsights';\nimport './AnalyticsDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnalyticsDashboard = () => {\n  _s();\n  const {\n    jobs,\n    loading: jobsLoading\n  } = useEmployerData();\n  const [analyticsData, setAnalyticsData] = useState({\n    overview: {\n      totalJobs: 0,\n      activeJobs: 0,\n      totalApplications: 0,\n      totalViews: 0,\n      avgTimeToHire: 0,\n      conversionRate: 0\n    },\n    jobPerformance: [],\n    hiringFunnel: {\n      applied: 0,\n      reviewed: 0,\n      shortlisted: 0,\n      interviewed: 0,\n      accepted: 0\n    },\n    applicationTrends: [],\n    topJobs: [],\n    insights: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [dateRange, setDateRange] = useState('30'); // days\n  const [selectedMetric, setSelectedMetric] = useState('applications');\n  useEffect(() => {\n    if (jobs.length > 0) {\n      loadAnalyticsData();\n    }\n  }, [jobs, dateRange]);\n  const loadAnalyticsData = async () => {\n    try {\n      setLoading(true);\n\n      // Calculate overview metrics\n      const overview = calculateOverviewMetrics();\n\n      // Load application data for all jobs\n      const allApplications = await loadAllApplications();\n\n      // Calculate analytics\n      const jobPerformance = calculateJobPerformance(allApplications);\n      const hiringFunnel = calculateHiringFunnel(allApplications);\n      const applicationTrends = calculateApplicationTrends(allApplications);\n      const topJobs = calculateTopJobs(allApplications);\n      const insights = generateInsights(overview, allApplications);\n      setAnalyticsData({\n        overview,\n        jobPerformance,\n        hiringFunnel,\n        applicationTrends,\n        topJobs,\n        insights\n      });\n    } catch (error) {\n      console.error('Error loading analytics data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const calculateOverviewMetrics = () => {\n    const totalJobs = jobs.length;\n    const activeJobs = jobs.filter(job => job.status === 'published').length;\n    const totalApplications = jobs.reduce((sum, job) => sum + (job.applied || 0), 0);\n    const totalViews = jobs.reduce((sum, job) => sum + (job.views || 0), 0);\n    const conversionRate = totalViews > 0 ? (totalApplications / totalViews * 100).toFixed(1) : 0;\n    return {\n      totalJobs,\n      activeJobs,\n      totalApplications,\n      totalViews,\n      avgTimeToHire: 14,\n      // Mock data - would calculate from actual hiring data\n      conversionRate: parseFloat(conversionRate)\n    };\n  };\n  const loadAllApplications = async () => {\n    const allApplications = [];\n    for (const job of jobs) {\n      try {\n        const applications = await applicationAPI.getJobApplications(job._id);\n        const applicationsWithJobInfo = applications.map(app => ({\n          ...app,\n          jobTitle: job.title,\n          jobType: job.type,\n          jobCategory: job.category\n        }));\n        allApplications.push(...applicationsWithJobInfo);\n      } catch (error) {\n        console.warn(`Failed to load applications for job ${job._id}`);\n      }\n    }\n    return allApplications;\n  };\n  const calculateJobPerformance = applications => {\n    const jobStats = {};\n\n    // Initialize job stats\n    jobs.forEach(job => {\n      jobStats[job._id] = {\n        jobId: job._id,\n        title: job.title,\n        views: job.views || 0,\n        applications: 0,\n        conversionRate: 0,\n        avgTimeToRespond: 0\n      };\n    });\n\n    // Calculate application stats\n    applications.forEach(app => {\n      if (jobStats[app.job]) {\n        jobStats[app.job].applications++;\n      }\n    });\n\n    // Calculate conversion rates\n    Object.values(jobStats).forEach(stat => {\n      stat.conversionRate = stat.views > 0 ? (stat.applications / stat.views * 100).toFixed(1) : 0;\n    });\n    return Object.values(jobStats).sort((a, b) => b.applications - a.applications);\n  };\n  const calculateHiringFunnel = applications => {\n    const funnel = {\n      applied: applications.length,\n      reviewed: applications.filter(app => ['reviewed', 'shortlisted', 'interviewed', 'accepted'].includes(app.status)).length,\n      shortlisted: applications.filter(app => ['shortlisted', 'interviewed', 'accepted'].includes(app.status)).length,\n      interviewed: applications.filter(app => ['interviewed', 'accepted'].includes(app.status)).length,\n      accepted: applications.filter(app => app.status === 'accepted').length\n    };\n    return funnel;\n  };\n  const calculateApplicationTrends = applications => {\n    const trends = {};\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - parseInt(dateRange));\n    applications.filter(app => new Date(app.appliedAt) >= cutoffDate).forEach(app => {\n      const date = new Date(app.appliedAt).toISOString().split('T')[0];\n      trends[date] = (trends[date] || 0) + 1;\n    });\n\n    // Fill missing dates with 0\n    const result = [];\n    for (let i = parseInt(dateRange) - 1; i >= 0; i--) {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const dateStr = date.toISOString().split('T')[0];\n      result.push({\n        date: dateStr,\n        applications: trends[dateStr] || 0\n      });\n    }\n    return result;\n  };\n  const calculateTopJobs = applications => {\n    const jobStats = {};\n    applications.forEach(app => {\n      const jobId = app.job;\n      if (!jobStats[jobId]) {\n        jobStats[jobId] = {\n          jobId,\n          title: app.jobTitle || 'Unknown',\n          applications: 0,\n          pending: 0,\n          accepted: 0,\n          rejected: 0\n        };\n      }\n      jobStats[jobId].applications++;\n      jobStats[jobId][app.status] = (jobStats[jobId][app.status] || 0) + 1;\n    });\n    return Object.values(jobStats).sort((a, b) => b.applications - a.applications).slice(0, 10);\n  };\n  const generateInsights = (overview, applications) => {\n    const insights = [];\n\n    // Conversion rate insight\n    if (overview.conversionRate < 2) {\n      insights.push({\n        type: 'warning',\n        title: 'Tỷ lệ chuyển đổi thấp',\n        description: `Tỷ lệ chuyển đổi từ lượt xem sang ứng tuyển chỉ ${overview.conversionRate}%. Hãy xem xét cải thiện mô tả công việc.`,\n        action: 'Cải thiện JD'\n      });\n    }\n\n    // Application volume insight\n    const recentApps = applications.filter(app => {\n      const appDate = new Date(app.appliedAt);\n      const weekAgo = new Date();\n      weekAgo.setDate(weekAgo.getDate() - 7);\n      return appDate >= weekAgo;\n    }).length;\n    if (recentApps === 0 && overview.activeJobs > 0) {\n      insights.push({\n        type: 'alert',\n        title: 'Không có ứng tuyển mới',\n        description: 'Không có ứng tuyển nào trong 7 ngày qua. Hãy xem xét quảng bá tin tuyển dụng.',\n        action: 'Quảng bá tin'\n      });\n    }\n\n    // Response time insight\n    const pendingApps = applications.filter(app => app.status === 'pending');\n    if (pendingApps.length > 10) {\n      insights.push({\n        type: 'info',\n        title: 'Nhiều đơn chờ xử lý',\n        description: `Có ${pendingApps.length} đơn ứng tuyển đang chờ xem xét. Hãy xử lý để cải thiện trải nghiệm ứng viên.`,\n        action: 'Xem xét đơn'\n      });\n    }\n    return insights;\n  };\n  if (jobsLoading || loading) {\n    return /*#__PURE__*/_jsxDEV(EmployerLayout, {\n      currentPage: \"analytics\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-dashboard\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u ph\\xE2n t\\xEDch...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EmployerLayout, {\n    currentPage: \"analytics\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"B\\xE1o c\\xE1o & Ph\\xE2n t\\xEDch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Theo d\\xF5i hi\\u1EC7u qu\\u1EA3 tuy\\u1EC3n d\\u1EE5ng v\\xE0 t\\u1ED1i \\u01B0u h\\xF3a quy tr\\xECnh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: dateRange,\n            onChange: e => setDateRange(e.target.value),\n            className: \"date-range-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"7\",\n              children: \"7 ng\\xE0y qua\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"30\",\n              children: \"30 ng\\xE0y qua\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"90\",\n              children: \"90 ng\\xE0y qua\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"365\",\n              children: \"1 n\\u0103m qua\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"export-btn\",\n            onClick: () => alert('Tính năng xuất báo cáo sẽ được bổ sung'),\n            children: \"\\uD83D\\uDCCA Xu\\u1EA5t b\\xE1o c\\xE1o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OverviewMetrics, {\n        data: analyticsData.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(HiringFunnelChart, {\n            data: analyticsData.hiringFunnel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(ApplicationTrendsChart, {\n            data: analyticsData.applicationTrends\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"performance-section\",\n        children: /*#__PURE__*/_jsxDEV(JobPerformanceChart, {\n          data: analyticsData.jobPerformance,\n          selectedMetric: selectedMetric,\n          onMetricChange: setSelectedMetric\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-container\",\n          children: /*#__PURE__*/_jsxDEV(TopJobsTable, {\n            data: analyticsData.topJobs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insights-container\",\n          children: /*#__PURE__*/_jsxDEV(RecruitmentInsights, {\n            data: analyticsData.insights\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 9\n  }, this);\n};\n_s(AnalyticsDashboard, \"+/YnohBhmPvFunMfvF32bjBRilA=\", false, function () {\n  return [useEmployerData];\n});\n_c = AnalyticsDashboard;\nexport default AnalyticsDashboard;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useEmployerData","applicationAPI","EmployerLayout","OverviewMetrics","JobPerformanceChart","HiringFunnelChart","ApplicationTrendsChart","TopJobsTable","RecruitmentInsights","jsxDEV","_jsxDEV","AnalyticsDashboard","_s","jobs","loading","jobsLoading","analyticsData","setAnalyticsData","overview","totalJobs","activeJobs","totalApplications","totalViews","avgTimeToHire","conversionRate","jobPerformance","hiringFunnel","applied","reviewed","shortlisted","interviewed","accepted","applicationTrends","topJobs","insights","setLoading","dateRange","setDateRange","selectedMetric","setSelectedMetric","length","loadAnalyticsData","calculateOverviewMetrics","allApplications","loadAllApplications","calculateJobPerformance","calculateHiringFunnel","calculateApplicationTrends","calculateTopJobs","generateInsights","error","console","filter","job","status","reduce","sum","views","toFixed","parseFloat","applications","getJobApplications","_id","applicationsWithJobInfo","map","app","jobTitle","title","jobType","type","jobCategory","category","push","warn","jobStats","forEach","jobId","avgTimeToRespond","Object","values","stat","sort","a","b","funnel","includes","trends","cutoffDate","Date","setDate","getDate","parseInt","appliedAt","date","toISOString","split","result","i","dateStr","pending","rejected","slice","description","action","recentApps","appDate","weekAgo","pendingApps","currentPage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","alert","data","onMetricChange","_c","$RefreshReg$"],"sources":["E:/HocTap/Ky8/EXE201/EXE201/PartGo/src/components/employer/Analytics/AnalyticsDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useEmployerData } from '../../../hooks/employer/useEmployerData';\r\nimport { applicationAPI } from '../../../services/applicationAPI';\r\nimport EmployerLayout from '../Layout/EmployerLayout';\r\nimport OverviewMetrics from './OverviewMetrics';\r\nimport JobPerformanceChart from './JobPerformanceChart';\r\nimport HiringFunnelChart from './HiringFunnelChart';\r\nimport ApplicationTrendsChart from './ApplicationTrendsChart';\r\nimport TopJobsTable from './TopJobsTable';\r\nimport RecruitmentInsights from './RecruitmentInsights';\r\nimport './AnalyticsDashboard.css';\r\n\r\nconst AnalyticsDashboard = () => {\r\n    const { jobs, loading: jobsLoading } = useEmployerData();\r\n    const [analyticsData, setAnalyticsData] = useState({\r\n        overview: {\r\n            totalJobs: 0,\r\n            activeJobs: 0,\r\n            totalApplications: 0,\r\n            totalViews: 0,\r\n            avgTimeToHire: 0,\r\n            conversionRate: 0\r\n        },\r\n        jobPerformance: [],\r\n        hiringFunnel: {\r\n            applied: 0,\r\n            reviewed: 0,\r\n            shortlisted: 0,\r\n            interviewed: 0,\r\n            accepted: 0\r\n        },\r\n        applicationTrends: [],\r\n        topJobs: [],\r\n        insights: []\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [dateRange, setDateRange] = useState('30'); // days\r\n    const [selectedMetric, setSelectedMetric] = useState('applications');\r\n\r\n    useEffect(() => {\r\n        if (jobs.length > 0) {\r\n            loadAnalyticsData();\r\n        }\r\n    }, [jobs, dateRange]);\r\n\r\n    const loadAnalyticsData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            \r\n            // Calculate overview metrics\r\n            const overview = calculateOverviewMetrics();\r\n            \r\n            // Load application data for all jobs\r\n            const allApplications = await loadAllApplications();\r\n            \r\n            // Calculate analytics\r\n            const jobPerformance = calculateJobPerformance(allApplications);\r\n            const hiringFunnel = calculateHiringFunnel(allApplications);\r\n            const applicationTrends = calculateApplicationTrends(allApplications);\r\n            const topJobs = calculateTopJobs(allApplications);\r\n            const insights = generateInsights(overview, allApplications);\r\n\r\n            setAnalyticsData({\r\n                overview,\r\n                jobPerformance,\r\n                hiringFunnel,\r\n                applicationTrends,\r\n                topJobs,\r\n                insights\r\n            });\r\n        } catch (error) {\r\n            console.error('Error loading analytics data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const calculateOverviewMetrics = () => {\r\n        const totalJobs = jobs.length;\r\n        const activeJobs = jobs.filter(job => job.status === 'published').length;\r\n        const totalApplications = jobs.reduce((sum, job) => sum + (job.applied || 0), 0);\r\n        const totalViews = jobs.reduce((sum, job) => sum + (job.views || 0), 0);\r\n        const conversionRate = totalViews > 0 ? ((totalApplications / totalViews) * 100).toFixed(1) : 0;\r\n\r\n        return {\r\n            totalJobs,\r\n            activeJobs,\r\n            totalApplications,\r\n            totalViews,\r\n            avgTimeToHire: 14, // Mock data - would calculate from actual hiring data\r\n            conversionRate: parseFloat(conversionRate)\r\n        };\r\n    };\r\n\r\n    const loadAllApplications = async () => {\r\n        const allApplications = [];\r\n        \r\n        for (const job of jobs) {\r\n            try {\r\n                const applications = await applicationAPI.getJobApplications(job._id);\r\n                const applicationsWithJobInfo = applications.map(app => ({\r\n                    ...app,\r\n                    jobTitle: job.title,\r\n                    jobType: job.type,\r\n                    jobCategory: job.category\r\n                }));\r\n                allApplications.push(...applicationsWithJobInfo);\r\n            } catch (error) {\r\n                console.warn(`Failed to load applications for job ${job._id}`);\r\n            }\r\n        }\r\n        \r\n        return allApplications;\r\n    };\r\n\r\n    const calculateJobPerformance = (applications) => {\r\n        const jobStats = {};\r\n        \r\n        // Initialize job stats\r\n        jobs.forEach(job => {\r\n            jobStats[job._id] = {\r\n                jobId: job._id,\r\n                title: job.title,\r\n                views: job.views || 0,\r\n                applications: 0,\r\n                conversionRate: 0,\r\n                avgTimeToRespond: 0\r\n            };\r\n        });\r\n        \r\n        // Calculate application stats\r\n        applications.forEach(app => {\r\n            if (jobStats[app.job]) {\r\n                jobStats[app.job].applications++;\r\n            }\r\n        });\r\n        \r\n        // Calculate conversion rates\r\n        Object.values(jobStats).forEach(stat => {\r\n            stat.conversionRate = stat.views > 0 ? \r\n                ((stat.applications / stat.views) * 100).toFixed(1) : 0;\r\n        });\r\n        \r\n        return Object.values(jobStats).sort((a, b) => b.applications - a.applications);\r\n    };\r\n\r\n    const calculateHiringFunnel = (applications) => {\r\n        const funnel = {\r\n            applied: applications.length,\r\n            reviewed: applications.filter(app => ['reviewed', 'shortlisted', 'interviewed', 'accepted'].includes(app.status)).length,\r\n            shortlisted: applications.filter(app => ['shortlisted', 'interviewed', 'accepted'].includes(app.status)).length,\r\n            interviewed: applications.filter(app => ['interviewed', 'accepted'].includes(app.status)).length,\r\n            accepted: applications.filter(app => app.status === 'accepted').length\r\n        };\r\n        \r\n        return funnel;\r\n    };\r\n\r\n    const calculateApplicationTrends = (applications) => {\r\n        const trends = {};\r\n        const cutoffDate = new Date();\r\n        cutoffDate.setDate(cutoffDate.getDate() - parseInt(dateRange));\r\n        \r\n        applications\r\n            .filter(app => new Date(app.appliedAt) >= cutoffDate)\r\n            .forEach(app => {\r\n                const date = new Date(app.appliedAt).toISOString().split('T')[0];\r\n                trends[date] = (trends[date] || 0) + 1;\r\n            });\r\n        \r\n        // Fill missing dates with 0\r\n        const result = [];\r\n        for (let i = parseInt(dateRange) - 1; i >= 0; i--) {\r\n            const date = new Date();\r\n            date.setDate(date.getDate() - i);\r\n            const dateStr = date.toISOString().split('T')[0];\r\n            result.push({\r\n                date: dateStr,\r\n                applications: trends[dateStr] || 0\r\n            });\r\n        }\r\n        \r\n        return result;\r\n    };\r\n\r\n    const calculateTopJobs = (applications) => {\r\n        const jobStats = {};\r\n        \r\n        applications.forEach(app => {\r\n            const jobId = app.job;\r\n            if (!jobStats[jobId]) {\r\n                jobStats[jobId] = {\r\n                    jobId,\r\n                    title: app.jobTitle || 'Unknown',\r\n                    applications: 0,\r\n                    pending: 0,\r\n                    accepted: 0,\r\n                    rejected: 0\r\n                };\r\n            }\r\n            \r\n            jobStats[jobId].applications++;\r\n            jobStats[jobId][app.status] = (jobStats[jobId][app.status] || 0) + 1;\r\n        });\r\n        \r\n        return Object.values(jobStats)\r\n            .sort((a, b) => b.applications - a.applications)\r\n            .slice(0, 10);\r\n    };\r\n\r\n    const generateInsights = (overview, applications) => {\r\n        const insights = [];\r\n        \r\n        // Conversion rate insight\r\n        if (overview.conversionRate < 2) {\r\n            insights.push({\r\n                type: 'warning',\r\n                title: 'Tỷ lệ chuyển đổi thấp',\r\n                description: `Tỷ lệ chuyển đổi từ lượt xem sang ứng tuyển chỉ ${overview.conversionRate}%. Hãy xem xét cải thiện mô tả công việc.`,\r\n                action: 'Cải thiện JD'\r\n            });\r\n        }\r\n        \r\n        // Application volume insight\r\n        const recentApps = applications.filter(app => {\r\n            const appDate = new Date(app.appliedAt);\r\n            const weekAgo = new Date();\r\n            weekAgo.setDate(weekAgo.getDate() - 7);\r\n            return appDate >= weekAgo;\r\n        }).length;\r\n        \r\n        if (recentApps === 0 && overview.activeJobs > 0) {\r\n            insights.push({\r\n                type: 'alert',\r\n                title: 'Không có ứng tuyển mới',\r\n                description: 'Không có ứng tuyển nào trong 7 ngày qua. Hãy xem xét quảng bá tin tuyển dụng.',\r\n                action: 'Quảng bá tin'\r\n            });\r\n        }\r\n        \r\n        // Response time insight\r\n        const pendingApps = applications.filter(app => app.status === 'pending');\r\n        if (pendingApps.length > 10) {\r\n            insights.push({\r\n                type: 'info',\r\n                title: 'Nhiều đơn chờ xử lý',\r\n                description: `Có ${pendingApps.length} đơn ứng tuyển đang chờ xem xét. Hãy xử lý để cải thiện trải nghiệm ứng viên.`,\r\n                action: 'Xem xét đơn'\r\n            });\r\n        }\r\n        \r\n        return insights;\r\n    };\r\n\r\n    if (jobsLoading || loading) {\r\n        return (\r\n            <EmployerLayout currentPage=\"analytics\">\r\n                <div className=\"analytics-dashboard\">\r\n                    <div className=\"loading-container\">\r\n                        <div className=\"loading-spinner\"></div>\r\n                        <p>Đang tải dữ liệu phân tích...</p>\r\n                    </div>\r\n                </div>\r\n            </EmployerLayout>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <EmployerLayout currentPage=\"analytics\">\r\n            <div className=\"analytics-dashboard\">\r\n                {/* Header */}\r\n                <div className=\"analytics-header\">\r\n                    <div className=\"header-content\">\r\n                        <h1>Báo cáo & Phân tích</h1>\r\n                        <p>Theo dõi hiệu quả tuyển dụng và tối ưu hóa quy trình</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"header-controls\">\r\n                        <select\r\n                            value={dateRange}\r\n                            onChange={(e) => setDateRange(e.target.value)}\r\n                            className=\"date-range-select\"\r\n                        >\r\n                            <option value=\"7\">7 ngày qua</option>\r\n                            <option value=\"30\">30 ngày qua</option>\r\n                            <option value=\"90\">90 ngày qua</option>\r\n                            <option value=\"365\">1 năm qua</option>\r\n                        </select>\r\n                        \r\n                        <button \r\n                            className=\"export-btn\"\r\n                            onClick={() => alert('Tính năng xuất báo cáo sẽ được bổ sung')}\r\n                        >\r\n                            📊 Xuất báo cáo\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Overview Metrics */}\r\n                <OverviewMetrics data={analyticsData.overview} />\r\n\r\n                {/* Charts Grid */}\r\n                <div className=\"charts-grid\">\r\n                    <div className=\"chart-container\">\r\n                        <HiringFunnelChart data={analyticsData.hiringFunnel} />\r\n                    </div>\r\n                    \r\n                    <div className=\"chart-container\">\r\n                        <ApplicationTrendsChart data={analyticsData.applicationTrends} />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Job Performance */}\r\n                <div className=\"performance-section\">\r\n                    <JobPerformanceChart \r\n                        data={analyticsData.jobPerformance}\r\n                        selectedMetric={selectedMetric}\r\n                        onMetricChange={setSelectedMetric}\r\n                    />\r\n                </div>\r\n\r\n                {/* Bottom Grid */}\r\n                <div className=\"bottom-grid\">\r\n                    <div className=\"table-container\">\r\n                        <TopJobsTable data={analyticsData.topJobs} />\r\n                    </div>\r\n                    \r\n                    <div className=\"insights-container\">\r\n                        <RecruitmentInsights data={analyticsData.insights} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </EmployerLayout>\r\n    );\r\n};\r\n\r\nexport default AnalyticsDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}